#!/bin/sh

#  BuildInfo.sh
#  Fleksy
#
#  Created by John Engelhart on 3/27/13.
#  Copyright (c) 2012 Syntellia Inc. All rights reserved.

# If any command fails, cause the script to fail and exit with non-zero status.
set -e
# If any variable is used but unset, cause the script to fail and exit with non-zero status.
set -u

printf "// THIS FILE IS AUTOMATICALLY GENERATED!\n// ANY MODIFICATIONS WILL BE LOST!\n// Generated on `date`\n\n" >"${SRCROOT}/${FL_BUILD_INFO_FILE}"

/usr/bin/perl -i -e 'chomp($SHORTHASH=`cd "$ENV{SRCROOT}"; git rev-parse --short HEAD`) or die "Could not get git short hash."; $SHORTHASH =~ /[0-9a-fA-F]{4,12}/ or die "The extracted git short hash <$SHORTHASH> does not appear to be valid."; print "FL_GIT_SHORTHASH = $SHORTHASH;\n\n";' >>"${SRCROOT}/${FL_BUILD_INFO_FILE}"

BUILDINFO_REVISION_NUMBER=$(/usr/bin/perl -i -e 'chomp($REVISION_NUMBER=`cd "$ENV{SRCROOT}"; git rev-list HEAD --count`) or die "Could not get git revision number"; $REVISION_NUMBER=~ /[0-9]{1,7}/ or die "The extracted git revison number <$REVISION_NUMBER> does not appear to be valid."; print "$REVISION_NUMBER";')
BUILDINFO_BUILD_NUMBER=$(( ${BUILDINFO_REVISION_NUMBER} + ${GIT_REVISION_START:-85} ))

printf "FL_GIT_REVISION_NUMBER = ${BUILDINFO_REVISION_NUMBER};\n\n" >>"${SRCROOT}/${FL_BUILD_INFO_FILE}"
printf "FL_BUILDINFO_BUILD_NUMBER = ${BUILDINFO_BUILD_NUMBER};\n\n" >>"${SRCROOT}/${FL_BUILD_INFO_FILE}"

printf "// From file \"${FL_BUILDUTIL_DIR}/TestFlightVersion.xcconfig\"\n" >>"${SRCROOT}/${FL_BUILD_INFO_FILE}"
cat "${SRCROOT}/${FL_BUILDUTIL_DIR}/TestFlightVersion.xcconfig" >>"${SRCROOT}/${FL_BUILD_INFO_FILE}"

#if [ "${CONFIGURATION}" == "TestFlight" ]; then
#/usr/bin/perl -pi -e 's/(^\s*FL_TESTFLIGHT_BUILD_NUMBER\s*=\s*)(\d+)/$1.($2+1)/eg' "${SRCROOT}/${FL_BUILD_INFO_FILE}"
#fi;
